"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API
"""

import requests
import json
from datetime import datetime

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:8000"

def test_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π API"""
    
    print("üéµ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 50)
    
    # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    try:
        response = requests.get(f"{BASE_URL}/users")
        users = response.json()
        print(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        for user in users[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 3
            print(f"  - {user['username']} ({user['email']})")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤:")
    try:
        response = requests.get(f"{BASE_URL}/artists")
        artists = response.json()
        print(f"–ù–∞–π–¥–µ–Ω–æ –∞—Ä—Ç–∏—Å—Ç–æ–≤: {len(artists)}")
        for artist in artists:
            print(f"  - {artist['name']}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–µ—Å–µ–Ω
    print("\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–µ—Å–µ–Ω:")
    try:
        response = requests.get(f"{BASE_URL}/songs")
        songs = response.json()
        print(f"–ù–∞–π–¥–µ–Ω–æ –ø–µ—Å–µ–Ω: {len(songs)}")
        for song in songs:
            duration = f"{song['duration']//60}:{song['duration']%60:02d}"
            print(f"  - {song['title']} ({duration})")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∂–∞–Ω—Ä–æ–≤
    print("\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∂–∞–Ω—Ä–æ–≤:")
    try:
        response = requests.get(f"{BASE_URL}/genres")
        genres = response.json()
        print(f"–ù–∞–π–¥–µ–Ω–æ –∂–∞–Ω—Ä–æ–≤: {len(genres)}")
        for genre in genres:
            print(f"  - {genre['name']}: {genre['description']}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # 5. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n5. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    try:
        new_user = {
            "email": "test@example.com",
            "password": "test123",
            "username": "testuser",
            "country": "Russia",
            "subscription_type": "free",
            "registration_date": datetime.now().isoformat().split('T')[0]
        }
        response = requests.post(f"{BASE_URL}/users", json=new_user)
        if response.status_code == 200:
            user = response.json()
            print(f"  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user['username']} (ID: {user['user_id']})")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.status_code}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # 6. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∂–∞–Ω—Ä–∞
    print("\n6. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∂–∞–Ω—Ä–∞:")
    try:
        new_genre = {
            "name": "Rock",
            "description": "Rock music genre"
        }
        response = requests.post(f"{BASE_URL}/genres", json=new_genre)
        if response.status_code == 200:
            genre = response.json()
            print(f"  ‚úÖ –ñ–∞–Ω—Ä —Å–æ–∑–¥–∞–Ω: {genre['name']} (ID: {genre['genre_id']})")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∂–∞–Ω—Ä–∞: {response.status_code}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # 7. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Å–µ–Ω –ø–æ –∂–∞–Ω—Ä—É
    print("\n7. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Å–µ–Ω –ø–æ –∂–∞–Ω—Ä—É (Pop):")
    try:
        # –°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–µ–º ID –∂–∞–Ω—Ä–∞ Pop
        response = requests.get(f"{BASE_URL}/genres")
        genres = response.json()
        pop_genre_id = None
        for genre in genres:
            if genre['name'].lower() == 'pop':
                pop_genre_id = genre['genre_id']
                break
        
        if pop_genre_id:
            response = requests.get(f"{BASE_URL}/songs/genre/{pop_genre_id}")
            songs = response.json()
            print(f"  –ù–∞–π–¥–µ–Ω–æ –ø–µ—Å–µ–Ω –≤ –∂–∞–Ω—Ä–µ Pop: {len(songs)}")
            for song in songs:
                print(f"    - {song['title']}")
        else:
            print("  –ñ–∞–Ω—Ä Pop –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # 8. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–ª—å–±–æ–º–æ–≤ –∞—Ä—Ç–∏—Å—Ç–∞
    print("\n8. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–ª—å–±–æ–º–æ–≤ –∞—Ä—Ç–∏—Å—Ç–∞:")
    try:
        # –°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–µ–º ID –∞—Ä—Ç–∏—Å—Ç–∞
        response = requests.get(f"{BASE_URL}/artists")
        artists = response.json()
        if artists:
            artist_id = artists[0]['artist_id']
            response = requests.get(f"{BASE_URL}/albums/artist/{artist_id}")
            albums = response.json()
            print(f"  –ê–ª—å–±–æ–º—ã –∞—Ä—Ç–∏—Å—Ç–∞ {artists[0]['name']}: {len(albums)}")
            for album in albums:
                print(f"    - {album['title']} ({album['release_date']})")
        else:
            print("  –ê—Ä—Ç–∏—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: {BASE_URL}")
    print(f"üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: {BASE_URL}/docs")

def create_sample_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    print("\nüéØ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∂–∞–Ω—Ä–∞
    try:
        genre_data = {
            "name": "Electronic",
            "description": "Electronic music"
        }
        response = requests.post(f"{BASE_URL}/genres", json=genre_data)
        if response.status_code == 200:
            print("‚úÖ –ñ–∞–Ω—Ä Electronic —Å–æ–∑–¥–∞–Ω")
    except:
        pass
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user_data = {
            "email": "demo@example.com",
            "password": "demo123",
            "username": "demouser",
            "country": "Russia",
            "subscription_type": "premium",
            "registration_date": "2025-01-01"
        }
        response = requests.post(f"{BASE_URL}/users", json=user_data)
        if response.status_code == 200:
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å demouser —Å–æ–∑–¥–∞–Ω")
    except:
        pass

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API...")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
    print()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
        response = requests.get(f"{BASE_URL}/users")
        if response.status_code == 200:
            test_api()
            create_sample_data()
        else:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π: python main.py")
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É.")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ: python main.py")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
